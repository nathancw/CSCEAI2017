package puzzlegame.assignment3;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Random;

class Game
{

	static double[] evolveWeights()
	{
		// Create a random initial population
		Random r = new Random();
		Matrix population = new Matrix(100, 291);
		for(int i = 0; i < 100; i++)
		{
			double[] chromosome = population.row(i);
			for(int j = 0; j < chromosome.length; j++)
				chromosome[j] = 0.03 * r.nextGaussian();
		}


		// Evolve the population
		// todo: YOUR CODE WILL START HERE.
		//       Please write some code to evolve this population.
		//       (For tournament selection, you will need to call Controller.doBattleNoGui(agent1, agent2).)
		
		
		int numEvolutions = 0;
		int maxEvolutions = 400;
		
		
		while(numEvolutions < maxEvolutions){
		//Add mutation
		//int mutationCount = 0;
		int mutationRate = 100; //1/mutation rate to be mutated
		double mutationAverage = 0.7;
		for(int i = 0; i < 100; i++)
		{
			double[] chromosome = population.row(i);
			for(int j = 0; j < chromosome.length; j++)
				
				if(r.nextInt(mutationRate)==0){
					//Pick random chromosone
					int mut = r.nextInt(291);
					double gaus = r.nextGaussian();
					//System.out.println("Mutating chromosome[" + mut + "]: " + chromosome[mut] + " Mutation count : " + mutationCount);
					chromosome[mut]+= mutationAverage * gaus;
					//chromosome[mut]+=chromosome[mut]*mutationAverage;
					//System.out.println("New value chromosome[" + mut + "]: " + chromosome[mut]);
					//mutationCount++;
				}
		}
		//Done adding mutations
		
		//Natural Selection
		
		//Choose pair of chromosones
		int numTournaments = 20;
		int probToSurvive = 66;
		for(int x = 0; x < numTournaments; x++){
			int cNum1 = r.nextInt(100); //First chromosome num
			int cNum2 = r.nextInt(100); //Second chromosome num
			
			double [] chromoOne = population.row(cNum1);
			double [] chromoTwo = population.row(cNum2);
			
			//if(numEvolutions > maxEvolutions-20)
				//System.out.println("Chromo one: " + Arrays.toString(chromoOne));
			
			//If they aren't the same chromosome, continue to do battle! Also check if they aren't a dead chromo
			//I'm assuming the chances of 80 being zero are near to none
			if(cNum1 != cNum2 && chromoOne[0]!=0.0 && chromoTwo[0] !=0.0){
				
				//System.out.print("Battling " + Arrays.toString(chromoOne) + " and " + Arrays.toString(chromoTwo) + " ");
				//IAgent red = new IAgent();
				
				int winner = 0;
				try {
					winner = Controller.doBattleNoGui(new NeuralAgent(chromoOne), new NeuralAgent(chromoTwo));
				} catch (Exception e) {
					e.printStackTrace();
				}

				if(winner == 1){
					//System.out.print("ChromoOne won.\n");
					int killLoser = r.nextInt(100);
					
					if(killLoser <= probToSurvive){ //67% to killLoser and live
						for(int i = 0; i < chromoTwo.length; i++)
							population.row(cNum2)[i] = 0; //Kill the chromoOne
						//System.out.println(" Killed  -- " + cNum2);
					}
					else{ //Oops he gets to be killed
						for(int i = 0; i < chromoOne.length; i++)
							population.row(cNum1)[i] = 0; //Kill the chromoOne
						//System.out.println(" Killed -- " + cNum1);
					}
				}
				else if(winner == -1){
					//System.out.print("ChromoTwo won.\n");
					
					int killLoser = r.nextInt(100);
					
					if(killLoser <=probToSurvive){ //67% to killLoser and live
						for(int i = 0; i < chromoOne.length; i++)
							population.row(cNum1)[i] = 0; //Kill the chromoOne
						//System.out.println(" Killed  -- " + cNum1);
					}
					else{ //Oops he gets to be killed
						for(int i = 0; i < chromoTwo.length; i++)
							population.row(cNum2)[i] = 0; //Kill the chromoOne
						//System.out.println(" Killed -- " + cNum2);
					}
					
				}
				else{
					//System.out.println("Nobody won. Killing both.");
				}
				
			}	
		}//End Natural Selection for loop
		
		//Replenish the population!
		
		int numCandidates = 5;
		double difference = 0.05;
		for(int i = 0; i < 100; i++){
			
			//If its a dead chromo, make a baby!!
			if(population.row(i)[0] == 0.0){
				int parent1 = r.nextInt(100); //Pick first parent
				
				while(parent1==i || population.row(parent1)[0] ==0.0) //Make sure its not the same as the dead child
					parent1 = r.nextInt(100);
				
				int candidates[] = new int[numCandidates];
				int parent2 = 0;
				for(int x = 0; x < numCandidates; x++){
					parent2 = r.nextInt(100); //Pick second parent
					
					while(parent2 == parent1 || parent2 == i || population.row(parent2)[0] ==0.0) //Make sure its not the same as the dead child or the first parent
						parent2 = r.nextInt(100);
					candidates[x] = parent2;
					//System.out.println("New candidate: " + Arrays.toString(population.row(parent2)));
				
				}
				
				//Find whos the most similiar
				double[] dad = population.row(parent1);
				//System.out.println("Dad: " + Arrays.toString(dad));
				int bestMom = 0;
				double parentDifference = 5000000; //We have hugely different parents
				double testDifference;
				for(int x = 0; x < numCandidates; x++){
					double[] testMom = population.row(candidates[x]);
					//System.out.println("Test mom: " + Arrays.toString(testMom));
					testDifference = 0;
					
					for(int c = 0; c < dad.length; c++){
						testDifference+= Math.pow((dad[c] - testMom[c]), 2);
					}
					if(testDifference < parentDifference && testMom[0]!=0.0){
						parentDifference = testDifference;
						bestMom = candidates[x];
						//System.out.println("Test diff: " + testDifference + " parentDiff: " + parentDifference + "bestMom: " + bestMom);
					}
						
				}//Done finding best parent
				
				//Lets mate!
				double[] mom = population.row(bestMom);
				//System.out.println("Mother: " + Arrays.toString(mom));
				for(int x = 0; x < dad.length; x++){
					int rand = r.nextInt(2);
					
					if(rand == 0){
						//if(dad[x] == 0.0)
						//	System.out.println("Dad has a zero?!?");
						//else
						population.row(i)[x] = dad[x];
						
					}
					else{
						//if(mom[x] == 0.0)
						//System.out.println("Dad has a zero?!?");
						//else
						population.row(i)[x] = mom[x];
					}
				}
				
				//System.out.println("Done making the child.");
				//System.out.println("Dad: " + Arrays.toString(dad));
				//System.out.println("Mother: " + Arrays.toString(mom));
				//System.out.println("Dad: " + parent1 + " Mom: " + parent2 + " New child " + i + " : " + Arrays.toString(population.row(i)));
			}
		}

		numEvolutions++;
		System.out.println("Evolution number: " + numEvolutions);
	}//End of while



		// Return an arbitrary member from the population
		int num = r.nextInt(100);
		int count = 0;
		for(int x = 0; x < 100; x++){
			try {
				if(Controller.doBattleNoGui(new ReflexAgent(), new NeuralAgent(population.row(x))) == -1){
					count++;
					//return population.row(x);
				
				}
				
			} catch (Exception e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		} 
		System.out.println("won:" + count);
		return population.row(num);
	}


	public static void main(String[] args) throws Exception
	{
		double[] w = evolveWeights();
		
		//double[] w = {-0.050061408383615946, -0.5911780179842673, 0.32772119479905093, 1.2129567281813225, 0.947319887920348, 0.9825856691091773, -1.0665774106851544, -1.0317552091311304, -1.3335489647516519, -1.7424246576304447, 0.021973035609662784, -2.4100923706058444, -0.4994705942896141, -0.182171513811892, 0.3609008816164497, -0.8448585448629253, 1.0710372103669195, -0.1540142030315148, 0.016035380120287275, 0.7065036086797274, -0.30811195173875383, -1.928428972639223, -0.0029020148344181943, -1.3028373161669256, 0.03162301649837408, -1.7630102658714242, -0.006288692571141923, -0.016333702722878148, -0.20461563552298742, -0.6158960008322447, 0.05008398038394352, 0.23926535173802532, -0.5544855983904549, -0.5050422417839184, 0.12371665123718556, 1.106716492653637, -1.0934420588071039, -1.0319897539604805, -2.524530507310094, 1.6658567334683907, -0.2187355444989726, 1.4682780453041968, -0.8961501604137981, 0.1393367251347362, 0.3013664585780464, 0.28566699891869596, -0.005534515115553067, -1.479891324346005, 0.038206843167354114, 0.5128644841216711, -0.008936426232428416, 0.023210868390906306, 0.044708710305873194, -0.36187009302779266, -1.0656271559443145, -0.7963425826745212, 0.0027349032101726123, -0.13001395487995593, -0.10964418783424032, -0.3932394676942283, -1.4293710013218903, 0.06963952127492581, 0.7020066716546354, -1.6413390450428518, -3.4671772067018503, -0.06714177536412991, -0.7722270730711381, -1.7266138959215342, -0.8091934639422815, -0.0384265729456735, -0.2534014414837872, 0.7925784715066971, -0.6496977017732353, -0.5652820745459819, -0.8320412769932295, -0.46239263742749714, 0.8906749514179617, -0.29961035577009065, -0.9528487909326234, 2.0472231556870533, -0.5573745382216724, -0.01224245372671671, 0.7686327379209504, 0.017351536959965573, 0.29733267593139306, -0.2696739088518171, -0.17474333345365622, -0.3912376394963168, 0.4354904910824319, 0.24141100262025117, -1.8719583262623356, 0.008048120596847945, 0.012759714476863894, -0.0069761254872536165, 0.37503694938350973, 0.19504807100497387, -0.6559345649928315, -0.2968495266601504, 1.6581227986573084, 0.07547687858067342, -2.312105109109556, 1.303912918092044, 0.19508020807426557, -0.007372284007151596, -0.6161106339891813, -0.2640925345040636, 0.04698724357783879, 0.08405745363181641, -0.058452857360198625, 0.43844664393910227, 1.5533656998042384, -0.2987960099216844, -2.381380691905515, 2.693783619522617, 0.8413716715652485, 1.3111032446557906, 0.2976040276464624, -0.0497440614006008, 0.41470088581607156, -1.5194959713928176, -0.8656992732531721, 1.574086177437184, 0.21778333035926448, 0.0055392315893915064, -0.028998575744800616, -0.3973606729168226, -0.19999211272888265, 0.16247028420569531, 1.5292244314668801, -1.7182855832353674, 0.1520667702314702, -2.850881494328329, -0.49383252257922494, -0.47798129145652696, 0.69357743272704, -0.5130188254668794, -2.79669832380769, -0.6424896952543043, -1.6039200288873534, 0.6642565541956439, -0.39431265408314237, -0.07173763430510727, -0.18654266743801462, -0.10307564501937248, -0.627237853333475, -0.4623077939533886, -1.553565608046107, -0.8213103366538854, 0.0015854406583185562, -0.5788286555361707, -0.27490950209074994, -1.703609532807446, 0.00410919070836429, 0.568335445963961, 0.024401996156101807, -0.45421383916447644, -0.02129526522365842, 1.005665855693266, -0.7404661229712401, 1.479019154765399, -0.2810865343560735, -0.8933095482049471, -1.0969977587667255, 0.11395590356019575, -0.508664451562519, 1.1347587220935187, 0.17517456486160762, 0.00758824605049121, 0.13178326726090267, 0.02500351520086114, 0.9826944891649442, -0.4504017226271337, 1.2606416269988687, 0.0034932559240756756, 0.0110180829496998, -0.35489114337578426, 0.04360264095625937, -1.1957876522022508, -1.9789542687527497, -0.12907720643582027, -0.5754299324832226, -0.38400193371333113, 0.006053240493608914, 0.07413509244886515, 1.5855613185184076, -1.0845736978618914, 0.13474595978289663, 0.3313551213798325, 1.0617681837706898, 0.7437910687648556, -0.038615043110849956, -0.1238455920119562, -0.3996168982631908, -0.005825344248500332, 0.8398464133122638, 0.2515801227975035, 0.17799870982320826, -0.06477192419035567, 0.6782644296557033, 0.016317245934718453, -0.005614397573561851, -0.8801371170768006, 0.5795636638235101, -0.1908867570813636, 0.5908850964867507, 2.1845157787513694, 0.4651081620437378, -1.5366170437782052, -0.5456303468076337, 0.10065438279312611, 1.0665958675092244, -0.9583144037618876, 0.010885971971668625, -0.2797185865500698, -0.7749312634453175, -1.4622109611349974, 2.0214687930039372, 0.5913029427219906, -0.46491315639935094, 0.19579030640115502, -0.07974208528242907, -0.042608330372881, -0.4546766280418836, -0.42204725808786836, -0.19190550187574024, 0.916849030257143, -1.0807445075868447, 0.4772375870641987, 0.21545616099877052, -0.028640007354219385, 0.986295870326522, 1.863388815243713, -0.3272730800328125, -0.05693805960856163, -0.02376971775437924, 0.4512805315288673, -0.035874972209912634, -0.011227863564313607, 0.5102729494518682, -0.9780717106534276, 0.8275720910932375, -0.054642918437749134, 1.1741548373696713, -3.717091879426644E-4, 1.3109678250984687, 0.49039363932969554, -0.003752673628204998, 0.014385849202936543, 1.739735788720901, 7.615139277323742E-5, -0.12758995252650815, 0.7200826670553511, 0.9954717566576944, -1.129975122951219, -0.018809708893605157, 0.7310971505049577, 1.4235828361931657, -0.268777612900927, -0.5093776700844198, -0.009680553892315535, -0.9622850523050454, -0.6141536077271562, -0.013246652956509885, -0.7710145457419909, 0.26614477313251383, 0.03885136345729501, -1.0795704181025856, -1.5498350839605228, -1.92367033962763, -0.8162810583420144, 0.22004988627670186, 0.05405842490784862, -0.008279917269429888, -0.012751048777679389, 0.17959208245395716, 1.1298054868768326, 0.06492611279778246, 0.28902067478177335, -0.5924355989597836, -1.618512643593757, -1.8296473677076293, -0.14280951035621742, -0.3714086594268434, -0.7545880541100753, -0.9877518777399683, 0.3084896445805349, 2.130591796262455, -0.6354813798734686, -1.4778153864384531, 1.8953083204864014, 1.0172517688620843};
		System.out.println(Arrays.toString(w) + "\n" + "\n");
		System.out.println(Controller.doBattleNoGui(new ReflexAgent(), new NeuralAgent(w))); //Looking for -1
		//Controller.doBattle(new ReflexAgent(), new NeuralAgent(w));
		
		//[1.4278062179093252, -0.8414658067512626, -3.430878069485397, -0.5530266700798886, -3.7339007174276717, -0.8271989009580576, -0.6865147401628494, -0.03869713902799515, -1.3806921654326125, 2.82242913120967, -0.9881675331449635, 2.885837730211544, -0.0058013211444239874, 5.078255543446284, 0.6267748150693737, 0.3285590569693366, 0.41050498765657784, -1.549613381323693, 0.8528682384816878, 1.5051028086458151, 1.3172907657501758, 3.6674043717425033, 1.054308872084251, -0.529803625255931, 1.664950175309028, 0.9658747920350554, -2.4344823539549334, -9.357918959529005E-4, 0.8590548427108929, 4.120906037644227, 3.1953840029126934, -0.3236926915185312, -0.049708527105420605, -0.016176689668226236, 0.021817964639907036, -1.1258030042411382, -0.8954386237409302, 0.5928425599268046, 2.3833773527779325, -0.5989372285582482, -0.004129206161506073, -4.22280302877334, 5.297672135645984, 4.017972623405293, -0.4014925640692525, 1.092304142746835, -2.1014456880214643, -4.125808036084513, -1.3910958126453326, 0.028562028878741905, -0.7648797695333228, 1.0715405393042952, -0.0429649162944304, -2.176979410916771, 0.05507403125424082, 2.0259868860649726, -0.2864410946819339, 0.029464799622009485, -0.403798268948381, -0.9286469835858872, 3.875835995216954, 0.007703429456867757, 1.1812341244413471, -1.6781289306429101, 0.40544420609098647, 0.011914996502699482, 0.021579065503858817, 0.0491275121392664, 0.5424253793028335, 1.9754773593778199, -0.02078035487788186, 0.015383935091437186, -1.4874290944857007, 1.3880191948104526, 1.007914221154071, -0.5201078416930786, 3.3765110039824204, 3.959113593419813, 4.056673290182691, -0.009469597020618042, -0.0933025624075741, -1.598519894622842, -1.1436546396602116, -0.006129120144730517, 5.592594219013105, -4.6849991047450485, -1.124178828890901, 2.2275096860375094, -1.6243912328608245, -3.9708823480901754, 3.2982308161336245, 1.5384100044229219, 0.016149544806168953, 5.041060176196333, 0.5247048918729021, 0.019421031039903305, -0.011254208650366193, -0.9835093475410646, -1.5317197265844957, 0.7231820684485295, -0.8145676059904946, 3.717669267156177, 1.6103793232106463, -1.779494608189427, -0.6725595721042474, 0.02147878414835494, -1.070809631361301, 1.4446747254561327, -0.019457866147553533, 2.9520334975666334, 2.024499075581172, 4.623912638110536, -1.0504686371604346, -4.935949983133007, -0.764917202541169, 0.07128896421003739, 0.4211672809920537, -2.3610975402664494, 0.025083410176054553, 0.003976425364538126, -1.7423205655134477, 1.2360226141222597, -1.962302423486924, -3.791955846773207, 2.618055038059088, -0.02342326736431585, 0.23804179443330864, -0.852531364957433, -0.532158255611194, 0.7338112737144074, -2.7568016933824624, 0.11302818942249883, -1.639792134742708, -0.22292573013783096, 3.406555614516079, 0.02639693309936592, 0.01407045216090671, 0.09423953747871322, 1.7741747695506496, 3.164962304805893, -0.28845922294544607, -1.6175010200088258, 1.7834869758205496, -0.00813436333100356, 0.029513035928942038, -4.717474335743921, -2.015642635344229, -1.1303957576011054, -0.0028959321275578917, 4.17797746491587, -0.013991496056339772, 1.3236739894447955, -2.1922142793992796, -0.7460959542608455, -0.10155408104496266, 0.8625560623167834, -2.316721317652577, -0.13993092809836205, -0.5085709506834823, -0.03242087818062531, -0.9138268523151487, -3.89869660176981, 3.7931705471324983, 0.7736022277058662, 0.045822559177341696, 1.153237736923841, -0.008634474022097069, -1.4372275698692605, 2.214895461804625, -1.5511884499540214, 0.0163081092147714, -0.3403174875022318, -0.018104340692746017, 0.045645555302397445, 0.3764180447861064, 1.0962117378834024, 1.5923730681601274, 3.1350556302921273, -1.6618135498067717, -3.609688679707067, -0.09851510791778564, -0.3260429425978005, 1.937210534588009, -3.402613721027617, 3.049417489110165, -2.302558246987306, -0.01606415400405845, 0.016630573285535653, 2.0275617069557716, -0.1807913665991987, -2.669002651733684, -1.5943492408889088, -2.67770818716589, 4.412455057447899, 2.1053550720458456, 1.8147547387464311, -3.855896728175755, -3.6722364635677067, -5.637348516455976, 0.8136094618750858, -0.03851645764863586, 2.0230061558308496, -0.8702016777480988, 1.868691488197543, -0.053796887700301006, -0.34745855696880223, -2.889428337117918, 0.017205831163966467, -5.1525890309288345, -0.13878439223017536, 2.0584945575667546, 1.48127430955818, 0.01121509363621666, 3.5873669309295932, 0.2431834988947903, -0.3132692394180031, 1.36879731291786, -2.0964148366865203, 2.45386013444738, 0.5523809653918539, 2.4449124533412188, 0.2519806346682446, 2.934664411525798, -1.1852024118998112, -4.48099658580024, -5.33616953889075, 0.758488600688501, 0.5175965834025389, -0.04848671135473764, -0.0726669380250318, -0.19871125730853967, 0.1377847849853322, -3.2004178273825032, -2.2102497753239585, -1.4135307645319994, 0.18020547640834006, -3.8482332453816643, 0.016170052250339816, -5.815331984171178, -0.3615651042554027, 2.1567636077013, 2.6039426640914036, 0.9959982656521289, 1.2165487980096932, -1.6688478983228394, -1.2352901038641082, 3.2143753302914173, -0.02525381902687531, 1.2829504796034583, 0.020882863882066827, 0.03126242395379702, 7.2025004525595495, -1.8531660452731549, 0.3123891975698835, 0.16169590637998957, 0.9293827795934003, 1.101791356818349, -2.657041572747084, 3.0766549926745093, 0.052816004239998084, 2.2535452559191618, 0.5117581127272232, 1.7825955522273098, -4.113031843050609, -0.3498172503931128, -1.4688725052381, 1.1544170955281734, 0.024996572018149633, 0.25895707143876723, -1.9461471562670027, 6.010018946578572, 0.014077317822364122, 4.907995564681843, 11.765932414279082, 0.47994659790790917, -0.04921634691221467, 0.028029631658977806, 0.004936227342838463, -0.461863575951299, 0.042035954906056196, -0.049688252529510035, 0.8284372033716509, 7.582748017159507E-4, -2.793977868818394, -0.6961662395060646, 0.657882445756073, -0.21293861999664077, 3.0854382705900787, -3.4600899283586206, -0.07231118201456643, -3.424624000289568]
		//[-0.04202596109304965, -1.19274463259643, -0.8201516905362104, 2.0925533821287563, 1.8866004394655507, -0.3694257972568298, 0.15213484344281208, 1.1937982202438422, 0.022851234224101746, 0.870893635450261, 0.33641360340607707, 1.2899167272021996, 0.596466056745895, 1.385276765808045, 0.4897397172739073, 1.4814854219579505, 0.30612303635559646, 0.8272949507757844, 1.6554977382075666, 0.17036265053191202, -0.7933144174752881, -1.5502865889137434, 0.7741752662422746, -1.135859905077241, -0.008630748308777922, 1.3711690419307099, -0.010275812558147714, -0.647789417466728, -0.8394520570715265, 0.02559400088172995, 0.21024801720041666, -0.02729888265961223, -1.4098153996999943, -0.39027438370961587, -0.8153993800519114, 0.8882692583729558, 0.08775098296175288, -0.1595300479454702, 0.026254954889622862, -0.1889735565080679, -1.5010127387445058, 0.2515950055896642, 0.030552374337986576, 1.068584026845925, 0.5971865308830273, 0.0017069257691517078, -0.7977528254571721, -0.0034317153798423816, -0.48422334897329067, -0.6741011006685692, -0.28565327570223853, 0.42515131820132007, 0.4897759443148575, 0.057126847677891, -1.024609548751705, -0.0305676883234153, -0.012052663899796373, -0.352406956241039, 0.024674378611621358, -0.007753584423737005, 1.6803076733009519, -0.023250561539306065, 1.0870183106784876, -4.521279038549622, 1.9565870422370393, 0.011150560982637121, -0.1439794747501965, -0.15157565822210634, -0.6225559294273161, -2.6642391845339444, -0.9468016344457489, 0.5941483085509636, 0.5711703690676627, 0.10379925124604919, -0.0043135070066996975, 0.18396120307749741, -0.326810201829818, -1.4783045092510638, 0.4097368605394314, 0.05556624264490168, -0.3809494416761281, 1.9110265329566791, 1.0174685873947618, -0.4556200218680041, 0.5697266523503666, 1.1345185940452533, 0.6148365081641883, 0.8673769321389073, -0.7960891902552296, 0.3047492201670916, 0.03224634855905304, 0.08479020360598195, -0.01403618869097337, 2.391556115578495, 0.00207548540179155, 1.292064935990143, -0.5854991169678215, 0.016538148466026904, -1.161842126459817, -0.4996701176276368, -0.497261644758318, 0.5933273097148465, -0.24076528315515583, 1.0903842016883323, -0.01545626470898227, -0.007659204006921296, 0.40749920239169396, 0.7858128960501314, 0.03049605765123128, -0.1568853896823931, -0.04103916553160806, -0.6486122507075572, -0.033102699095138875, -0.14913152284913267, -0.053683834029854265, 1.5264026369986585, -0.5679596389015433, -0.0021064784414278536, -0.3845742171411388, -0.13133708625802817, -0.3536184978357301, 0.7466658754472897, -0.0012936954344933693, -1.317894927330312, 0.012814691305882928, 0.04059738653243608, 0.02794822263860571, -0.8020379973391674, 1.6242580135309133, -0.012584517648648059, -0.03297079255203283, 0.10876294273392201, -0.017449154483678397, 0.7969164741989385, -0.21226752503340468, -0.7390012387787176, 1.0298822940919299, 0.42955020465678395, -0.6660958752143495, 0.05073784899810985, 0.05810965662121376, 0.03695264255232812, -0.005725596299092663, 0.9760292477102983, -1.4546275993341526, -0.28723817012617614, 0.29444022501701017, 1.2702810785745795, 0.042864089122547834, 0.7598109196435316, 0.015257291195112162, -0.15136355371733518, -0.23019813783895754, -0.8935054279558976, 0.788521238062045, 0.2296042840543437, 0.6607941915529538, -0.2095877538414216, -0.7832968401304874, -0.011729714632165888, 0.01253726764837414, -1.814919983193163, -0.06385543597595555, -1.1862580349264527, 1.3148739303291193, -1.4585324672363311, 0.24880080220518241, -0.39262213106121174, -0.47322241536134135, 0.03299724834064486, 0.04213375784469808, 0.7067443495254221, -1.682580247259741, 0.0031953854596109346, 0.39805101111012203, 0.30513507554899655, 1.1279401428893474, -0.7721975812723363, -0.7913548443856214, -0.347086104225803, 0.4919858392877484, 0.9734966171119936, -1.5787335412384556, -0.40053210612896145, 0.7724154226597199, 0.09307637404705893, -1.4698975947087587, 2.1741723867811054, 1.236368221338807, -0.019118338704325274, -0.01473669948054731, -1.2477533562391, -0.5809125690778556, -0.6114515879745547, -0.7271941646008955, -0.047952451787726946, -0.22920824513050905, 1.1534182992230375, -0.00775621835808042, 1.3313434248973444, -0.883863863328346, 0.2999002744858053, -0.21813003538210377, -0.7331912954946018, 0.05573082720714251, -0.897483544893537, -0.37667939368671954, -0.03696570824482757, -0.21334111631438846, -0.32872665814860413, -0.5057492961467962, 3.8997503606966903, 0.17457937186155353, 0.7525341741745251, -0.007263922026518036, -0.06927177036225414, -0.018488058496954868, 1.100255140356369, 0.6977439648224287, -0.3393655609068078, -1.3225171117110164, -0.7938062898867284, 0.641860675639315, 1.2578400324784789, -0.2647781992165795, -0.0012854953102882762, -0.7557484024754053, -0.6415107858279814, -3.2879240571554615, 0.6634971995288793, -0.012224587632246186, 0.3793830681080449, -0.7378104009555263, -1.9284270207012177, 0.3670118097225893, 0.11079173636731937, 0.02875946741325313, -1.4842163024559993, -0.3887185592261491, -0.9839331062559209, -1.1222919962640796, 0.03665529119083636, 0.30727012894561595, -1.1591794825652013, -1.1478077227275694, 0.006958755370254929, -0.21790308622240379, 0.4964601239547349, -1.166735333031679, -0.8698378431576556, -2.845904131626832, -1.0278537146385274, 0.06598299317756896, 0.681994610647244, -0.3122574537639122, 1.2223366075011493, -0.3556515602540341, -0.15793841752725743, -1.5876760624867734, -0.7733167162446448, 4.1522662783376925, -0.02527083676765564, -0.0440620026246377, 0.9299628592658309, 0.02661343942020661, 0.1917522873756768, 0.8010697651355743, -0.4776744065195511, 0.2833773599866234, -0.6574646871543612, -0.04523021384506874, 0.9475845892444101, -2.267993590758275, -1.0672899310986828, 0.3815793032646689, -0.23010267287871983, -0.335109605947336, 0.020672178255933565, -1.7413650301575494, 0.06317539371749843, -0.05385887512384716, 0.9257359921135485, 0.6803717824186543, 0.26066687471934546, 0.36588058466388884, -1.016507647210125, -1.467333272092833, -0.013836952036398332, 0.5691096752893035, 0.9288640324288269, 0.5850175915148472]

		
	}

}
